y = y0 + b*t
z = z0 + b*t
any( c(x,y,z)-floor(c(x,y,z)) > 0)
low = -10
high = 10
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
any( c(x,y,z)-floor(c(x,y,z)) > 0)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;
while( any( c(x,y,z)-floor(c(x,y,z)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z)
t
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;
while( any( c(x,y,z)-floor(c(x,y,z)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z)
t
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;
while( any( c(x,y,z)-floor(c(x,y,z)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z)
t
a
b
c
d
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;
while( any( c(x,y,z)-floor(c(x,y,z)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z)
t
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z,a,b,c,t)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z,a,b,c,t)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z,a,b,c,t)
x0
y0
z0
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z,a,b,c,t,x0,y0,z0)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z,a,b,c,t,x0,y0,z0)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z,a,b,c,t,x0,y0,z0)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z,a,b,c,t,x0,y0,z0)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z,a,b,c,t,x0,y0,z0)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z,a,b,c,t,x0,y0,z0)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z,a,b,c,t,x0,y0,z0)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z,a,b,c,t,x0,y0,z0)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z)
c(x0,y0,z0)
t
c(a,b,c,d)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z)
c(x0,y0,z0)
t
c(a,b,c,d)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z)
c(x0,y0,z0)
t
c(a,b,c,d)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z)
c(x0,y0,z0)
t
c(a,b,c,d)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z)
c(x0,y0,z0)
t
c(a,b,c,d)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z)
c(x0,y0,z0)
t
c(a,b,c,d)
low = -10
high = 10
x = 1.1; y = 1.1, z = 1.1;t=1.1
while( any( c(x,y,z,t)-floor(c(x,y,z,t)) > 0) ){
x0 = sample(low:high,1)
y0 = sample(low:high,1)
z0 = sample(low:high,1)
a = sample(low:high,1)
b = sample(low:high,1)
c = sample(low:high,1)
d = sample(low:high,1)
t = (d - a*x0-b*y0-c*z0)/(a^2+b^2+c^2)
x = x0 + a*t
y = y0 + b*t
z = z0 + b*t
}
c(x,y,z)
c(x0,y0,z0)
t
c(a,b,c,d)
library(swirl)
load("/Users/jbaggett/Google Drive/Gdrive_snap_May_15/MS Data Science/DS 705/Revision Fall 2017 (Includes new class materials)/Class Materials /datasets/farmpond.rda")
require(DS705data)
data("farmpond")
names(farmpond)
names(farmpond)[100] = "RICH"
names(farmpond)
.598-.402
.629-.371
.582-.418
# Final Exam - Problem 7
# Jennifer Salvo
require(gramEvol)
require(GA)
require(GenSA)
# find the minimum value of this function
# on the domain -5 <= x <= 5, -5 <= y <= 5
# you can call the function like this:
# f( c(x,y) ), e.g.
#x1 = c(.5,.5);
#fitness(x1);
#set default values
dimension = 2;
lower = rep(-5,dimension);
upper = rep(5,dimension);
R = qr.Q(qr(matrix(c(1,2,3,4),nrow=2,ncol=2,byrow=T)))
#Trial 1 - genetic algorithm ga with local search
fitness = function(x){
# x should be a vector with two elements e.g. fitness(c(1,2))
z = R%*%x+c(.5,.5);
s = 100*(z[1]^2-z[2])^2 + (z[1]-1)^2;
return((10*(s/4000-cos(s))+10)*-1) #for minimization, need to multiply by -1 for ga function
}
result = ga(type="real-valued",fitness=fitness,min=lower,max=upper,maxiter=10000,popSize=100,optim=TRUE)
round(result@solution,5)
result@fitnessValue
#Trial 2 - simulated annealing GenSA
fitness = function(x){
# x should be a vector with two elements e.g. fitness(c(1,2))
z = R%*%x+c(.5,.5);
s = 100*(z[1]^2-z[2])^2 + (z[1]-1)^2;
return((10*(s/4000-cos(s))+10)) #for minimization, need to multiply by -1 for ga function
}
#First argument (par) - Initial values for the components to be optimized.
#Default is NULL, in which case, default values will be generated automatically.
result = GenSA(NULL,fitness,lower=lower,upper=upper,control=list(max.call=10000))
result$value
result$par
#Trial 3 - optim for local search
fitness = function(x){
# x should be a vector with two elements e.g. fitness(c(1,2))
z = R%*%x+c(.5,.5);
s = 100*(z[1]^2-z[2])^2 + (z[1]-1)^2;
return((10*(s/4000-cos(s))+10)) #for minimization, need to multiply by -1 for ga function
}
bestmin <- 100000;
iteration = 0;
for (j in 1:10000){
x0 <- runif(dimension,min=-5,max=5);
result <- optim(x0,fitness,method="L-BFGS-B",lower=lower,upper=upper)
if (result$value<bestmin){ bestmin = result$value; bestx = result$par; iteration = j;}
}
bestmin
bestx
iteration
?rstudio
?load
.libPaths()
sample(c("H","T"),30,replace=T)
(1-(1/2)^5)^25
(1-(1/2)^4)^26
x = cbind( c(0,2,2,7,7,15,17,19), c(0,0,0,2,2,11,13,11), c(1,1,2,3,6,7,12,7))
x
colMeans(x)
f = 0:7
sum( x[,1]*f)
c = 0:7
sum( x[,1]*c)/69
sum( x[,2]*c)/40
sum( x[,3]*c)/39
69-18
51/69
5/7
rmarkdown::render()
rmarkdown::render()
??render
setwd("~/Google Drive/Gdrive_snap_May_15/MS Data Science/DS 705/Revision Fall 2017 (Includes new class materials)/Class Materials /Weekly Content/Lesson 03/Lesson 3 Homework Packet")
rmarkdown::render("Week_03_HW Submission.Rmd")
rmarkdown::render("Week_03_HW Submission.Rmd","word_document")
