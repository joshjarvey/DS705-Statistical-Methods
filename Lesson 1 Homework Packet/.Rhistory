install.packages("knitr")
install.packages("signmedian")
load("~/Google Drive/DS 705 /Class Materials/Weekly Content/week 14/police.rda")
police.s <- scale(police[,2:16], center = FALSE,
scale = apply(police[,2:16], 2, sd, na.rm = TRUE))
model.s<-hclust(dist(police.s))
plot(model.s)
rect.hclust(model.s, h=8)
police$clusternumber <- cutree(model.s, h=8)
summary(as.factor(police$clusternumber))
round(aggregate(police[,2:16],by=list(police$clusternumber),FUN=mean),2)
load("~/Google Drive/DS 705 /Class Materials/Weekly Content/week 13/ifanmot.rda")
summary(ifanmot$Interest)
load("~/Google Drive/DS 705 /Class Materials/Weekly Content/week 11/anesthesia.rda")
counts <- table(anesthesia$anesthetic,anesthesia$nausea)
chisq.test(anesthesia$anesthetic,anesthesia$nausea)
counts
naus.out <- glm(nausea~anesthetic,data=anesthesia,family="binomial")
summary(naus.out)
exp(-1.5261)
View(anesthesia)
require(mosaic)
counts <- table(anesthesia$anesthetic,anesthesia$nausea)
oddsRatio(counts,verbose = TRUE)  # can skip verbose=TRUE if you don't want extra info
exp(1.5261)
naus.out <- glm(nausea~anesthetic,data=anesthesia,family="binomial")
newdata <- data.frame(anesthesia="A")
predict(naus.out, newdata, type="response")
newdata <- data.frame(anesthetic="A")
predict(naus.out, newdata, type="response")
out <- predict(naus.out, newdata, se.fit=TRUE)
C = .95  # define the level of confidence
crit = qnorm(1-(1-C)/2)  # get the appropriate critical value
lower = exp(out$fit-crit*out$se.fit)/(1+exp(out$fit-crit*out$se.fit))
upper = exp(out$fit+crit*out$se.fit)/(1+exp(out$fit+crit*out$se.fit))
c(lower,upper)
naus.out2 <- glm(nausea~painmed,data=anesthesia,family="binomial")
summary(naus.out2)
```
exp(0.037487)
newdata2 <- data.frame(painmed=c(50,100))
predict(naus.out2, newdata2, type="response")
pts <- NULL
pts.poss <- NULL
display.grades <- TRUE
scoreFunction <- function(prb,earned,possible){
pts[prb] <<- earned
pts.poss[prb] <<- possible
if (display.grades){
print( paste('Score for',prb,':',earned,'/',possible))
}
}
scoreFunction("1b.1",6)
250-28
36+40+32+38+38+38
+28
222+28
load("~/Google Drive/DS 705 /Class Materials /Weekly Content/week 15/download_week_15/careerbarrier.rda")
View(careerbarrier)
spent <- c(8,10,12,12,14,15,17,17,19,24,25,27,30,31,39,53)
method <- c("Cash","Credit","Cash","Cash","Cash","Check","Debit","Check","Cash","Check","Credit","Debit","Credit","Cash","Credit","Credit")
gender <- c("F","F","M","F","M","M","M","F","F","M","F","F","F","F","M","F")
store <- data.frame(spent,method,gender)
dotchart(store$spent)
boxplot(store$spent)
hist(store$spent)
counts <- table(store$gender, store$method)
barplot(counts,xlab="Method of Payment", ylab="Frequency", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
stem(store$spent)
stripchart(store$spent)
stripchart(store$spent,method="stack")
table(store$method,store$gender)
mean(store$spent)
median(store$spent)
quantile(store$spent)
quantile(store$spent,c(.32,.57,.98))
var(store$spent) # variance
sd(store$spent) # std dev
mean(store$spent,trim=.05) # trimmed mean 5% off each end
mean(store$spent,trim=.25) # trimmed mean 5% off each end
?rchisq
x <- rchisq(100,10)
hist(x)
x <- rchisq(1000,10)
hist(x)
x <- rchisq(1000,10)
hist(x)
x <- rchisq(1000,10)
hist(x)
x <- rchisq(3000,10)
hist(x)
x <- rchisq(1000,10)
hist(x)
hist(x,xlab="Motor Vehicle Citations")
x <- rchisq(1000,10)
hist(x,xlab="Motor Vehicle Citations")
score <- 80-rchisq(1500,15)
hist(score,xlab="Midterm Score")
score <- 80-rchisq(1500,15)
hist(score,xlab="Midterm Score")
score <- 80-rchisq(700,15)
hist(score,xlab="Midterm Score")
score <- 80-rchisq(700,15)
hist(score,xlab="Midterm Score")
hist(x,xlab="Parking Citations")
x <- rdu(12,48)
rdu<-function(12,49) sample(1:k,n,replace=T)
rdu<-function(n,k) sample(1:k,n,replace=T)
rdu(12,48)
x < 50 + rdu(12,48)
x <- 50 + rdu(12,48)
x
hist(x,breaks = c(50,100,by=10))
hist(x,breaks = seq(50,100,by=10))
x <- 50 + rdu(12,48)
hist(x,breaks = seq(50,100,by=10))
x <- 50 + rdu(12,48)
hist(x,breaks = seq(50,100,by=10))
x <- 50 + rdu(12,48)
hist(x,breaks = seq(50,100,by=10))
x
hist(x,breaks = seq(50,100,by=10),xlab="Score")
hist(score,xlab="Midterm Score")
hist(score,xlab="Midterm Score",main="")
x <- rchisq(1000,10)
hist(x,xlab="Parking Citations")
x <- rchisq(1000,10)
hist(x,xlab="Parking Citations",main="")
x <- rchisq(1000,10)
hist(x,xlab="Parking Citations",main="")
x <- rchisq(1000,10)
hist(x,xlab="Parking Citations",main="")
x <- rchisq(1000,10)
hist(x,xlab="Parking Citations",main="")
x <- rchisq(1000,10)
hist(x,xlab="Parking Citations",main="")
hist(x,breaks=12,xlab="Parking Citations",main="")
hist(x,breaks=12,xlab="Parking Citations",main="")
hist(x,breaks=20,xlab="Parking Citations",main="")
hist(x,breaks = seq(50,100,by=10),xlab="Score")
x=c(56, 65, 72, 98, 82, 68, 68, 74, 54, 69, 97, 76)
hist(x,breaks = seq(50,100,by=10),xlab="Score",main="")
x <- c(74,	68,	59,	57,	85,	75,	58,	69,	78,	75,	64,	88)
hist(x,breaks = seq(50,90,by=10),xlab="Score",main="")
hist(x,breaks = seq(50,90,by=10),xlab="Heartrate",main="")
x <- c(74,	68,	59,	57,	85,	75,	58,	69,	78,	75,	64,	88)
hist(x,breaks = seq(50,90,by=10),xlab="Heartrate",main="")
hist(x,freq=FALSE,breaks = seq(50,90,by=10),xlab="Heartrate",main="")
hist(x,breaks = seq(50,100,by=10),xlab="Score",ylab="Relative Frequency,main="")
)
""
hist(x,freq=FALSE,breaks = seq(50,90,by=10),xlab="Heartrate",main="")
hist(x,freq=FALSE,breaks = seq(50,90,by=10),ylab="Relative Frequency",xlab="Heartrate",main="")
x=c(56, 65, 72, 98, 82, 68, 68, 74, 54, 69, 97, 76)
hist(x,breaks = seq(50,100,by=10),xlab="Score",main="")
hist(x,freq=FALSE,breaks = seq(50,100,by=10),ylab="Relative Frequency",xlab="Score",main="")
data(HealthExam)
require(DS705data)
# load the HealthExam data set into memory
data(HealthExam)
hf <- HealthExam[HealthExam$Sex=="F",]
fs <- hf$Cholesterol
summary(fs)
sd(fs)
testScores <- read.csv("testScores.csv")
setwd("~/Google Drive/DS 705 /Class Materials /Weekly Content/week 01/download_week_01")
testScores <- read.csv("testScores.csv")
boxplot(fs, ylab = "mg/dl", main = "Female cholesterol level")
head(testScores)
summary(testScores$score[testScores$instructor=="A"])
summary(testScores$score[testScores$instructor=="B"])
summary(testScores$score[testScores$instructor=="C"])
tapply(testScores$score, testScores$instructor, summary)
bins <- seq(50,90,by=5)
bfat <- read.table("bodyFat.csv")
View(bfat)
fs <- subset(HealthExam, HealthExam$Sex %in% c("F"), )
mean(fs$Cholesterol)
summary(fs)
sd(fs)
rm(fs)
fs <- subset(HealthExam, HealthExam$Sex %in% c("F"), )
sd(fs$Cholesterol)
hist(fs$Cholesterol, xlab = "mg/dl", main = "Female cholesterol level")
boxplot(fs$Cholesterol, ylab = "mg/dl", main = "Female cholesterol level")
qqnorm(fs$Cholesterol, ylab = "mg/dl")
qqline(fs$Cholesterol)
homes <- read.csv("homes.csv")
head(homes)
# summarize the scores for each instructor
summary(homes$PercentOwned[homes$Year=="year1985"])
Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
37.40   63.15   67.90   65.88   69.95   75.90
summary(homes$PercentOwned[homes$Year=="year1996"])
Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
40.40   64.55   68.20   66.84   71.20   76.50
summary(homes$PercentOwned[homes$Year=="year2002"])
Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
44.10   67.25   70.20   69.45   73.50   77.30
# a more advanced version of this summary by instructor would be to use tapply() to loop over the factors.
# uncomment the next line to try it
tapply(testScores$score, testScores$instructor, summary)
tapply(homes$PercentOwned, homes$Year, summary)
#$year1985
#   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 37.40   63.15   67.90   65.88   69.95   75.90
#$year1996
#  Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#40.40   64.55   68.20   66.84   71.20   76.50
#$year2002
#  Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#44.10   67.25   70.20   69.45   73.50   77.30
#  looks like the test scores across all three instructors range from 52 to 87, to make it easier to compare the distributions lets use the same bins for all three histograms
bins <- seq(50,90,by=5)
range(homes$PercentOwned)
#[1] 37.4 77.3
bins <- seq(35,80,by=5)
```
```{r, fig.width=8, fig.height=3}
# set up R to expect an array of plots with 1 row and 3 columns
# the mar parameter adjust white space around the plot, notice that it has covered the axis labels which is OK here
par(mfrow=c(1,3),mar=c(3,3,2,1))
hist(homes$PercentOwned[homes$Year=="year1985"],main="Scores for Year 1985",breaks = bins,xlab="PercentOwned", prob=TRUE)
hist(homes$PercentOwned[homes$Year=="year1996"],main="Scores for Year 1996",breaks = bins,xlab="PercentOwned", prob=TRUE,ylab="")
hist(homes$PercentOwned[homes$Year=="year2002"],main="Scores for Year 2002",breaks = bins,xlab="PercentOwned", prob=TRUE)
# reset to one plot
par(mfrow=c(1,1))
```
```{r, fig.width=7, fig.height=7}
# make side-by-side boxplots to make comparisons easier
boxplot(homes$PercentOwned~homes$Year,names=c("1985","1996","2002"),ylab="Percent Owned",main="% Owned By Year")
bfat <- as.vector(bodyfat[1:250,])
class(bfat)
hist(bfat)
View(bfat)
newdata=HealthExam[ which(HealthExam$Sex=='F'),]
fs = (newdata$Cholesterol)
mean(fs)
hist(fs, xlab="mg/dl", main="Female cholesterol level")
hist(fs, xlab="mg/dl", main="Female cholesterol level")
boxplot(fs, ylab="mg/dl", main="Female cholesterol level")
qqnorm(fs, ylab="mg/dl")
qqline(fs)
read.csv("bodyfat.csv")
bfat = read.csv("bodyfat.csv")
hist(bfat)
bfat2 <- data.frame(bfat)
hist(bfat2)
bfat3 <- read.csv("bodyfat.csv")
hist(bfat3)
View(bfat)
bfat.dataframe <- read.csv('bodyFat.csv')
bfat4 <- bfat.dataframe$bodyFat
hist(bfat4)
hist(bfat$bodyFat)
fx <- subset(HealthExam, HealthExam$Sex=="F")
fs <- fx$Cholesterol
summary(fs)
sd(fs)
hist(fs, xlab= "mg/dl",main="Female cholesterol level")
boxplot(fs, ylab= "mg/dl",main="Female cholsterol level")
setwd("~/Google Drive/DS 705 /Class Materials /Weekly Content/week 01/download_week_01")
homes <- read.csv("homes.csv")
head(homes)
summary(homes$PercentOwned[homes$Year=="year1985"])
summary(homes$PercentOwned[homes$Year=="year1996"])
summary(homes$PercentOwned[homes$Year=="year2002"])
tapply(testScores$score, testScores$instructor, summary)
tapply(homes$PercentOwned, homes$Year, summary)
bins <- seq(50,90,by=5)
range(homes$PercentOwned)
bins <- seq(35,80,by=5)
par(mfrow=c(1,3),mar=c(3,3,2,1))
hist(homes$PercentOwned[homes$Year=="year1985"],main="Scores for Year 1985",breaks = bins,xlab="PercentOwned", prob=TRUE)
hist(homes$PercentOwned[homes$Year=="year1996"],main="Scores for Year 1996",breaks = bins,xlab="PercentOwned", prob=TRUE,ylab="")
hist(homes$PercentOwned[homes$Year=="year2002"],main="Scores for Year 2002",breaks = bins,xlab="PercentOwned", prob=TRUE)
# reset to one plot
par(mfrow=c(1,1))
boxplot(homes$PercentOwned~homes$Year,names=c("1985","1996","2002"),ylab="Percent Owned",main="% Owned By Year")
read.csv("bodyfat.csv")
bfat = read.csv("bodyfat.csv")
testScores <- read.csv("testScores.csv")
head(testScores)
prop.test(16,48,p=.3)
prop.test(16,48,p=.3,correct=F)
install.packages("BSDA")  <- you will only need to do this once
install.packages("BSDA")
.libPaths()
if (!require(DS705data)){
if (!require(devtools)){
install.packages('devtools',repos="http://cran.rstudio.com")
}
library(devtools)
install_github('DataScienceUWL/DS705data')
}
require(DS705data)
data(package='DS705data')
